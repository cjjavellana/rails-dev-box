- hosts: all
  sudo: yes
  remote_user: vagrant
  vars:
    extra_path: /usr/local/node-v0.12.0/bin
    rvm: /usr/local/rvm/bin/rvm

  tasks:
    - name: Install 'Development Tools'
      yum: name="@Development Tools" state=present

    - name: Add vagrant to rvm group
      user: name=vagrant groups=rvm append=yes

    - name: Check for Ruby 2.2.1
      stat: path=/usr/local/rvm/rubies/ruby-2.2.1
      register: ruby_stat

    - name: Install Ruby 2.2.1
      command: /usr/local/rvm/bin/rvm install 2.2.1
      when: not ruby_stat.stat.exists

    - name: Install Gems
      yum: pkg={{item}} state=installed
      with_items:
        - rubygems

    - name: Check Ruby Version
      command: /usr/local/rvm/bin/rvm current
      register: default_ruby_version

    - debug: msg="Current Ruby Version is {{ default_ruby_version.stdout_lines }}"

    - name: Use Ruby 2.2.1
      command: /usr/local/rvm/bin/rvm use 2.2.1 --default
      when: default_ruby_version.stdout.find("2.2.1") == -1

    - name: Install Sqlite devel
      yum: pkg={{item}} state=present
      with_items:
        - sqlite-devel

    - name: Install Bundler
      gem: name=bundler state=present

    - name: Download NodeJS
      get_url: url=http://nodejs.org/dist/v0.12.0/node-v0.12.0-linux-x64.tar.gz dest=/tmp/node-v0.12.0-linux-x64.tar.gz

    - name: Extract NodeJS
      unarchive: src=/tmp/node-v0.12.0-linux-x64.tar.gz dest=/tmp copy=no
      args:
        creates: /tmp/node-v0.12.0-linux-x64

    - name: Stat node-v0.12.0-linux-x64.tar.gz
      stat: path=/tmp/node-v0.12.0-linux-x64
      register: node_in_tmp

    - name: Stat /usr/local/node-v0.12.0
      stat: path=/usr/local/node-v0.12.0
      register: node_exists

    - name: Rename NodeJS Directory
      command: cp -r /tmp/node-v0.12.0-linux-x64 /usr/local/node-v0.12.0
      when: node_in_tmp.stat.exists and not node_exists.stat.exists

    - name: Add NodeJS binary to path
      lineinfile: dest=/home/vagrant/.bash_profile state=present backrefs=yes regexp='^PATH=\$PATH\:\$HOME/bin$' line="PATH=$PATH:$HOME/bin:{{extra_path}}"

    - name: Open Rails Server (port 3000/tcp) for IPv4
      lineinfile: >
        dest=/etc/sysconfig/iptables
        state=present
        regexp="INPUT.*tcp.*dport\s3000.*ACCEPT$"
        insertafter="INPUT.*tcp.*dport\s22.*ACCEPT$"
        line="-A INPUT -m state --state NEW -m tcp -p tcp --dport 3000 -j ACCEPT"
        backup=yes
      notify: restart iptables

    - name: Open Grunt Server (port 8000/tcp) for IPv4
      lineinfile: >
        dest=/etc/sysconfig/iptables
        state=present
        regexp="INPUT.*tcp.*dport\s8000.*ACCEPT$"
        insertafter="INPUT.*tcp.*dport\s3000.*ACCEPT$"
        line="-A INPUT -m state --state NEW -m tcp -p tcp --dport 8000 -j ACCEPT"
        backup=yes
      notify: restart iptables

    - name: Open Rails Server (port 3000/tcp) for IPv6
      lineinfile: >
        dest=/etc/sysconfig/ip6tables
        state=present
        regexp="INPUT.*tcp.*dport\s3000.*ACCEPT$"
        insertafter="INPUT.*tcp.*dport\s22.*ACCEPT$"
        line="-A INPUT -m state --state NEW -m tcp -p tcp --dport 3000 -j ACCEPT"
        backup=yes
      notify: restart ip6tables

    - name: Open Grunt Server (port 8000/tcp) for IPv6
      lineinfile: >
        dest=/etc/sysconfig/ip6tables
        state=present
        regexp="INPUT.*tcp.*dport\s8000.*ACCEPT$"
        insertafter="INPUT.*tcp.*dport\s3000.*ACCEPT$"
        line="-A INPUT -m state --state NEW -m tcp -p tcp --dport 8000 -j ACCEPT"
        backup=yes
      notify: restart ip6tables

    - name: Install Redis
      yum: pkg=redis.x86_64 state=present
      notify: start redis

  handlers:
    - name: restart iptables
      service: name=iptables state=restarted

    - name: restart ip6tables
      service: name=ip6tables state=restarted

    - name: start redis
      service: name=redis state=started enabled=yes
